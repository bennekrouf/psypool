{"ast":null,"code":"import { StateEnum } from '../model';\nimport { Router } from '@angular/router';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../api/questions.service\";\nimport * as i4 from \"../result/result.component\";\n\nfunction PlayComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Play to discover the nice person sleeping inside you !\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function PlayComponent_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.start();\n    });\n    i0.ɵɵelementStart(4, \"span\", 2);\n    i0.ɵɵtext(5, \"Start !\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction PlayComponent_div_1_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\")(1, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function PlayComponent_div_1_li_8_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const option_r6 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onSelect(option_r6);\n    });\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 2);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"selected\", ctx_r5.selectedOption(ctx_r5.currentQuestion) && option_r6.value === ctx_r5.selectedOption(ctx_r5.currentQuestion).value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r7 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r6.value);\n  }\n}\n\nfunction PlayComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ul\", 4);\n    i0.ɵɵtemplate(8, PlayComponent_div_1_li_8_Template, 6, 4, \"li\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function PlayComponent_div_1_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.previous();\n    });\n    i0.ɵɵelementStart(10, \"span\", 2);\n    i0.ɵɵtext(11, \"< Previous question\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function PlayComponent_div_1_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.next();\n    });\n    i0.ɵɵelementStart(13, \"span\", 2);\n    i0.ɵɵtext(14, \"Next question >\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Question \", ctx_r1.currentQuestion.id, \"/\", ctx_r1.questions.length, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.currentQuestion == null ? null : ctx_r1.currentQuestion.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentQuestion == null ? null : ctx_r1.currentQuestion.option);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.previousable);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.selectedOption(ctx_r1.currentQuestion));\n  }\n}\n\nfunction PlayComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-result\", 8);\n    i0.ɵɵelementStart(2, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function PlayComponent_div_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.start();\n    });\n    i0.ɵɵelementStart(3, \"span\", 2);\n    i0.ɵɵtext(4, \"Restart\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"extroValue\", ctx_r2.extroValue)(\"introValue\", ctx_r2.introValue);\n  }\n}\n\nexport let PlayComponent = /*#__PURE__*/(() => {\n  class PlayComponent {\n    constructor(location, router, questionService, activatedRoute) {\n      this.location = location;\n      this.router = router;\n      this.questionService = questionService;\n      this.activatedRoute = activatedRoute;\n      this.stateEnum = StateEnum;\n      this.StateEnum = StateEnum;\n      this.questions = [];\n      this.answers = [];\n      this.previousable = false;\n      this.introValue = 0;\n      this.extroValue = 0;\n      this.state = {\n        value: StateEnum.MENU\n      };\n      this.currentQuestion = this.questions[0];\n      this.newTitleEvent = new EventEmitter();\n\n      router: Router;\n    }\n\n    ngOnInit() {\n      this.questionService.getQuestions().subscribe(questions => {\n        this.questions = questions.sort((a, b) => a.id < b.id ? -1 : 1);\n      });\n      this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    }\n\n    setState(newState) {\n      this.state.value = newState;\n    }\n\n    selectedOption(question) {\n      return question.option.filter(o => o.selected)[0];\n    }\n\n    initResult() {\n      this.questions = this.questions.map(question => {\n        question.option.forEach(o => {\n          o.selected = false;\n        });\n        return question;\n      });\n      this.introValue = 0;\n      this.extroValue = 0;\n    }\n\n    start() {\n      this.setState(StateEnum.PLAYING);\n      this.currentQuestion = this.questions[0];\n      this.initResult();\n      this.newTitleEvent.emit('Keep telling about yourself !');\n      this.redirectTo(this.currentQuestion.id);\n    }\n\n    saveSelection(selection) {\n      this.answers[this.currentQuestion.id] = selection;\n    }\n\n    redirectTo(id) {\n      const url = this.router.createUrlTree([], {\n        relativeTo: this.activatedRoute,\n        queryParams: {\n          question: id\n        }\n      }).toString();\n      this.location.go(url);\n    }\n\n    onSelect(option) {\n      this.currentQuestion.option = this.currentQuestion.option.map(o => {\n        o.selected = !!(o.value === option.value);\n        return o;\n      });\n    }\n\n    compute() {\n      this.questions.forEach(q => {\n        q.option.forEach(o => {\n          if (o.load < 0) {\n            this.introValue += o.load;\n          } else {\n            this.extroValue += o.load;\n          }\n        });\n      });\n    }\n\n    next() {\n      this.currentQuestion = this.questions[this.currentQuestion.id];\n      this.previousable = true;\n\n      if (this.currentQuestion && this.currentQuestion.id <= this.questions.length) {\n        this.redirectTo(this.currentQuestion.id);\n      } else {\n        this.compute();\n        this.previousable = false;\n        this.setState(StateEnum.END);\n        this.location.go('/result');\n      }\n    }\n\n    previous() {\n      if (this.currentQuestion.id > 1) {\n        this.currentQuestion = this.questions[this.currentQuestion.id - 2];\n      }\n\n      this.redirectTo(this.currentQuestion.id);\n    }\n\n  }\n\n  PlayComponent.ɵfac = function PlayComponent_Factory(t) {\n    return new (t || PlayComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.QuestionsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  PlayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlayComponent,\n    selectors: [[\"app-play\"]],\n    outputs: {\n      newTitleEvent: \"newTitleEvent\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [\"type\", \"button\", 3, \"click\"], [1, \"name\"], [1, \"button-container\"], [1, \"questions\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"disabled\", \"click\"], [1, \"badge\"], [3, \"extroValue\", \"introValue\"]],\n    template: function PlayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PlayComponent_div_0_Template, 6, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, PlayComponent_div_1_Template, 15, 6, \"div\", 0);\n        i0.ɵɵtemplate(2, PlayComponent_div_2_Template, 5, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.state.value === ctx.StateEnum.MENU);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state.value === ctx.StateEnum.PLAYING);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state.value === ctx.StateEnum.END);\n      }\n    },\n    directives: [i1.NgIf, i1.NgForOf, i4.ResultComponent],\n    styles: [\"button[_ngcontent-%COMP%]{text-decoration:none;margin-top:10px;display:inline-block;border-radius:4px;background-color:#264d73;border:1px solid #97a5b4;color:#fff}button.active[_ngcontent-%COMP%]{border:1px solid #97a5b4;color:#fff}button[_ngcontent-%COMP%]:disabled{background-color:#ccd6e0;border-color:#ccd6e0;cursor:not-allowed}.questions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#264d73}.questions[_ngcontent-%COMP%]{margin:0 0 2em;list-style-type:none;padding:0;width:15em;text-align:center;color:#26313e}.questions[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:700px;color:#264d73}.questions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{flex:1;cursor:pointer;position:relative;left:0;background-color:#ccd6e0;margin:.5em;padding:0;border-radius:4px;display:flex;align-items:stretch;height:1.8em;border:none}.questions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{color:#264d73;background-color:#ccd6e0;left:.1em}.questions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active{background-color:#264d73}.questions[_ngcontent-%COMP%]   button.selected[_ngcontent-%COMP%]{background-color:#356b9f;color:#fff}.questions[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%]{display:inline-block;font-size:small;color:#fff;padding:.8em .7em 0;background-color:#73264d;line-height:4em;margin-right:1.8em;border-radius:4px 0 0 4px}.questions[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{align-self:center;text-align:left}.button-container[_ngcontent-%COMP%]{text-align:center}.button-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{height:40px;margin-top:20px}\"]\n  });\n  return PlayComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}